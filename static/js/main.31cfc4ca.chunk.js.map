{"version":3,"sources":["routes/history.ts","pages/tic-tac-toe/constants.ts","pages/tic-tac-toe/components/canva/index.styled.ts","pages/tic-tac-toe/components/players/crossPlayer.tsx","pages/tic-tac-toe/components/players/circlePlayer.tsx","pages/tic-tac-toe/components/canva/index.tsx","pages/tic-tac-toe/components/index.styled.ts","pages/tic-tac-toe/index.tsx","routes/route-component.styled.ts","routes/route-component.tsx","pages/genesis/components/canva/index.styled.ts","pages/genesis/components/canva/index.tsx","pages/genesis/components/index.styled.ts","pages/genesis/index.tsx","pages/hangman/components/index.styled.ts","pages/hangman/components/canva/index.styled.ts","pages/hangman/components/keyboard/index.styled.ts","pages/hangman/components/constants.ts","pages/hangman/components/keyboard/index.tsx","pages/hangman/components/word/index.styled.ts","pages/hangman/components/word/index.tsx","pages/hangman/components/man/index.styled.ts","pages/hangman/components/man/index.tsx","pages/hangman/components/canva/index.tsx","pages/hangman/index.tsx","pages/home/index.tsx","routes/application-routes.tsx","App.tsx","index.tsx"],"names":["history","createBrowserHistory","CellState","GameContainer","styled","div","_templateObject","_taggedTemplateLiteral","BoardContainer","_templateObject2","cellColorAnimation","keyframes","_templateObject3","CELL_SIZE","Cell","button","_templateObject4","_ref","winnerCell","_ref2","css","_templateObject5","PlayerLabel","span","_templateObject6","_ref3","winner","CROSS","CIRCLE","RestartButton","_templateObject7","CrossPlayer","_jsx","fill","version","id","xmlns","width","height","viewBox","children","d","CirclePlayer","cx","cy","r","stroke","strokeWidth","initialBoard","Array","from","length","EMPTY","initialWinnerCells","Game","board","setBoard","useState","currentPlayer","setCurrentPlayer","gameWinner","setGameWinner","winnerCells","setWinnerCells","changePlayer","useCallback","player","restartGame","window","location","reload","checkWinner","newWinnerCells","i","j","DRAW","handleCellClick","row","col","newBoard","renderCell","state","_jsxs","map","rowIndex","cell","columnIndex","onClick","disabled","concat","TitleContainer","GameTitle","TicTacToe","_Fragment","RootContainer","RouteComponent","component","Component","rest","Route","render","props","PLAYER_1","PLAYER_2","PLAYER_3","PLAYER_4","BUTTON_SIZE","GameButton","GameButton1","GameButton2","GameButton3","GameButton4","Board","GameStateLabel","_templateObject8","wait","milliseconds","Promise","resolve","setTimeout","realSerie","setRealSerie","playerIndex","setPlayerIndex","gamingState","setGamingState","loseState","setLoseState","score","setScore","gamingLoading","async","random","Math","floor","series","index","document","getElementById","classList","add","remove","play","handlePlayerClick","label","useMemo","useEffect","Genesis","GameInfoContainer","State","Tip","WordContainer","KeyboadContainer","LettersContainer","LETTER_BUTTON_SIZE","LetterButton","WORDS","tip","words","LETTERS_COUNT","ALPHABET","_","String","fromCharCode","EVENT_TYPE","Keyboard","selectedLetters","handleKeyPressed","event","keyCode","addEventListener","removeEventListener","letterRows","slice","isSelected","letter","includes","letters","WORD_LETTER_SIZE","WordLetter","include","Word","word","MAN_COLOR","MAN_THICKNESS","BodyPart","show","ManContainer","Man","errors","className","setErrors","setSelectedLetters","gameState","setGameState","playing","selectedTip","selectedWord","obj","getRandTipWord","randIndex","randWord","showWord","split","handleLetterClick","handleRestartGame","every","stateLabel","Hangman","Home","href","ApplicationRoutes","BrowserRouter","historyProvider","basename","Switch","path","exact","App","APP","React","StrictMode","ReactDOM"],"mappings":"8MAIeA,MAFCC,c,cCDT,IAAKC,EAAS,SAATA,GAAS,OAATA,IAAS,iBAATA,IAAS,iBAATA,IAAS,mBAATA,IAAS,eAATA,CAAS,M,kBCEd,MAAMC,EAAgBC,IAAOC,IAAGC,MAAAC,YAAA,6FAO1BC,EAAiBJ,IAAOC,IAAGI,MAAAF,YAAA,wLAUlCG,EAAqBC,YAASC,MAAAL,YAAA,4HAU9BM,EAAY,OAELC,EAAOV,IAAOW,OAAMC,MAAAT,YAAA,+SACtBM,EACCA,GACUI,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAAKC,EACpC,UACA,SAAS,IAUXC,IAAA,IAAC,WAAED,GAAYC,EAAA,OAAKD,GAAcE,YAAGC,MAAAd,YAAA,+CACxBG,EACd,IAYUY,EAAclB,IAAOmB,KAAIC,MAAAjB,YAAA,sEAC3BkB,IAAA,IAAC,OAAEC,GAAQD,EAAA,OAAKC,GAAUxB,EAAUyB,MACzC,UACAD,GAAUxB,EAAU0B,OACpB,UACA,SAAS,IAMFC,EAAgBzB,IAAOW,OAAMe,MAAAvB,YAAA,sO,WCrD3BwB,MAjBeA,IAE1BC,cAAA,OAAKC,KAAK,UAAUC,QAAQ,MAAMC,GAAG,SAASC,MAAM,6BAClDC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,cAAaC,SAC9CR,cAAA,KAAAQ,SACER,cAAA,KAAAQ,SACER,cAAA,QAAMS,EAAE,ihBCEDC,MARgBA,IAE3BV,cAAA,OAAKO,QAAQ,cAAaC,SACxBR,cAAA,UAAQW,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,QAAQC,YAAY,KAAKd,KAAK,kBCC1E,MAEMe,EAAeC,MAAMC,KACzB,CAAEC,OAHc,IAIhB,IAAMF,MAAMC,KAAK,CAAEC,OAJH,IAIwB,IAAMjD,EAAUkD,UAGpDC,EAAqBJ,MAAMC,KAC/B,CAAEC,OARc,IAShB,IAAMF,MAAMC,KAAK,CAAEC,OATH,IASwB,KAAM,MAyJjCG,I,IAAAA,EAtJQA,KACrB,MAAOC,EAAOC,GAAYC,mBAAwBT,IAC3CU,EAAeC,GAAoBF,mBAAoBvD,EAAUyB,QACjEiC,EAAYC,GAAiBJ,mBAAoBvD,EAAUkD,QAC3DU,EAAaC,GAAkBN,mBAAsBJ,GAEtDW,EAAeC,uBAAY,KAC/BN,GAAkBO,GAChBA,IAAWhE,EAAUyB,MACjBzB,EAAU0B,OACV1B,EAAUyB,OACf,GACA,IAEGwC,EAAcF,uBAAY,KAC9BG,OAAOC,SAASC,QAAQ,GACvB,IAEGC,EAAcN,uBAAY,KAC9B,MAAMO,EAAiB,IAAIV,GAE3B,IAAI,IAAIW,EAAI,EAAGA,EAjCD,EAiCgBA,IAC5B,GACElB,EAAMkB,GAAG,KAAOlB,EAAMkB,GAAG,IACzBlB,EAAMkB,GAAG,KAAQlB,EAAMkB,GAAG,IAC1BlB,EAAMkB,GAAG,IAAMvE,EAAUkD,MAMzB,OAJAoB,EAAeC,GAAG,IAAK,EACvBD,EAAeC,GAAG,IAAK,EACvBD,EAAeC,GAAG,IAAK,EACvBV,EAAeS,GACRjB,EAAMkB,GAAG,GAKpB,IAAI,IAAIA,EAAI,EAAGA,EAhDD,EAgDgBA,IAC5B,GACElB,EAAM,GAAGkB,KAAOlB,EAAM,GAAGkB,IACzBlB,EAAM,GAAGkB,KAAQlB,EAAM,GAAGkB,IAC1BlB,EAAM,GAAGkB,IAAMvE,EAAUkD,MAMzB,OAJAoB,EAAe,GAAGC,IAAK,EACvBD,EAAe,GAAGC,IAAK,EACvBD,EAAe,GAAGC,IAAK,EACvBV,EAAeS,GACRjB,EAAM,GAAGkB,GAKpB,GACElB,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAQA,EAAM,GAAG,IAC1BA,EAAM,GAAG,IAAMrD,EAAUkD,MAMzB,OAJAoB,EAAe,GAAG,IAAK,EACvBA,EAAe,GAAG,IAAK,EACvBA,EAAe,GAAG,IAAK,EACvBT,EAAeS,GACRjB,EAAM,GAAG,GAIlB,GACEA,EAAM,GAAG,KAAOA,EAAM,GAAG,IACzBA,EAAM,GAAG,KAAQA,EAAM,GAAG,IAC1BA,EAAM,GAAG,IAAMrD,EAAUkD,MAMzB,OAJAoB,EAAe,GAAG,IAAK,EACvBA,EAAe,GAAG,IAAK,EACvBA,EAAe,GAAG,IAAK,EACvBT,EAAeS,GACRjB,EAAM,GAAG,GAIlB,IAAI,IAAIkB,EAAI,EAAGA,EAzFD,EAyFgBA,IAC5B,IAAI,IAAIC,EAAI,EAAGA,EA1FH,EA0FkBA,IAC5B,GAAGnB,EAAMkB,GAAGC,KAAOxE,EAAUkD,MAC3B,OAAOlD,EAAUkD,MAKvB,OAAOlD,EAAUyE,IAAI,GACpB,CAACpB,EAAOO,IAELc,EAAkBX,uBAAY,CAACY,EAAaC,KAEhD,GADkBvB,EAAMsB,GAAKC,KACZ5E,EAAUkD,OAASQ,GAAc1D,EAAUkD,MAC1D,OAEF,MAAM2B,EAAW,IAAIxB,GACrBwB,EAASF,GAAKC,GAAOpB,EACrBF,EAASuB,GAET,MAAMrD,EAAS6C,IACZ7C,IAAWxB,EAAUkD,MACtBS,EAAcnC,GAEdsC,GACF,GACC,CAACT,EAAOK,EAAYF,EAAea,EAAaP,IAE7CgB,EAAaf,uBAAagB,IAC9B,OAAQA,GACN,KAAK/E,EAAUkD,MACb,OAAO,KACT,KAAKlD,EAAUyB,MACb,OAAOK,cAACD,EAAW,IACrB,KAAK7B,EAAU0B,OACb,OAAOI,cAACU,EAAY,IACxB,GACC,IAEH,OACEwC,eAAC/E,EAAa,CAAAqC,SAAA,CACZ0C,eAAC5D,EAAW,CAACI,OAAQgC,EAAclB,SAAA,CAAC,kBAClBkB,KAElB1B,cAACxB,EAAc,CAAAgC,SACZe,EAAM4B,KAAI,CAACN,EAAKO,IACfP,EAAIM,KAAI,CAACE,EAAMC,IACbtD,cAAClB,EAAI,CAEHyE,QAASA,IAAMX,EAAgBQ,EAAUE,GACzCpE,WAAY4C,EAAYsB,GAAUE,GAClCE,SAAUH,IAASnF,EAAUkD,MAAMZ,SAElCwC,EAAWK,IAAK,QAAAI,OALJL,EAAQ,KAAAK,OAAIH,UAUjCtD,cAACH,EAAa,CAAC0D,QAASpB,EAAY3B,SAAC,iBAGpCoB,IAAe1D,EAAUkD,OACxBpB,cAACV,EAAW,CAACI,OAAQkC,EAAWpB,SAC7BoB,IAAe1D,EAAUyE,KAAI,uBAAAc,OAEb7B,EAAU,uBAIjB,EClKb,MAAM8B,EAAiBtF,IAAOC,IAAGC,MAAAC,YAAA,4HAQ3BoF,EAAYvF,IAAOmB,KAAId,MAAAF,YAAA,uECIrBqF,I,EAAAA,EATaA,IAChBV,eAAAW,WAAA,CAAArD,SAAA,CACJR,cAAC0D,EAAc,CAAAlD,SACXR,cAAC2D,EAAS,CAAAnD,SAAC,oBAEfR,cAACsB,EAAI,OCRN,MAAMwC,EAAgB1F,IAAOC,IAAGC,MAAAC,YAAA,uUCUxBwF,I,gBAAAA,EARuC9E,IAAwC,IAArC+E,UAAWC,KAAcC,GAAMjF,EACpF,OACIe,cAAC8D,EAAa,CAAAtD,SACVR,cAACmE,IAAK,IAAKD,EAAME,OAASC,GAAUrE,cAACiE,EAAS,IAAKI,OACvC,ECNjB,MAAMC,EAAW,UACXC,EAAW,UACXC,EAAW,UACXC,EAAW,UAEXtG,GAAgBC,IAAOC,IAAGC,MAAAC,YAAA,qGAOjCmG,GAAc,OAEdC,GAAavG,IAAOW,OAAMN,MAAAF,YAAA,8HACnBmG,GACCA,IAQDE,GAAcxG,YAAOuG,GAAPvG,CAAkBQ,MAAAL,YAAA,wEACrB+F,GAIXO,GAAczG,YAAOuG,GAAPvG,CAAkBY,MAAAT,YAAA,yEACrBgG,GAIXO,GAAc1G,YAAOuG,GAAPvG,CAAkBiB,MAAAd,YAAA,2EACrBiG,GAIXO,GAAc3G,YAAOuG,GAAPvG,CAAkBoB,MAAAjB,YAAA,4EACrBkG,GAIXO,GAAQ5G,IAAOC,IAAGyB,MAAAvB,YAAA,yiBAQzBqG,GACyBN,EAIzBO,GACyBN,EAIzBO,GACyBN,EAIzBO,GACyBN,GAKlBQ,GAAiB7G,IAAOmB,KAAI2F,MAAA3G,YAAA,2ECxEnC4G,GAAQC,GACH,IAAIC,SAASC,GAAYC,WAAWD,EAASF,KAoFzC9D,I,MAAAA,GAjFQA,KAEnB,MAAOkE,EAAWC,GAAgBhE,mBAAmB,KAC9CiE,EAAaC,GAAkBlE,mBAAiB,IAChDmE,EAAaC,GAAkBpE,oBAAkB,IACjDqE,EAAWC,GAAgBtE,oBAAkB,IAC7CuE,EAAOC,GAAYxE,mBAAiB,GAErCyE,EAAgBjE,uBAAYkE,UAC9B,MAAMC,EAASC,KAAKC,MAAsB,EAAhBD,KAAKD,UAAgB,EACzCG,EAAS,IAAIf,EAAWY,GAE9B,IAAI,IAAII,EAAQ,EAAGA,EAAQD,EAAOpF,OAAQqF,IAAS,CAC/C,MAAMzH,EAAS0H,SAASC,eAAe,UAADjD,OAAW8C,EAAOC,KAClD,OAANzH,QAAM,IAANA,KAAQ4H,UAAUC,IAAI,UACtBrB,YAAW,KACD,OAANxG,QAAM,IAANA,KAAQ4H,UAAUE,OAAO,SAAS,GACnC,WACG1B,GAAK,IACf,CAEAM,EAAac,GACbV,GAAe,EAAM,GACtB,CAACL,IAEEsB,EAAO7E,uBAAYkE,UAClBL,UACGX,GAAK,KACXU,GAAe,SACTK,IAAe,GACtB,CAACA,EAAeJ,IAEbiB,EAAoB9E,uBAAauE,IACnC,MAAMzH,EAAS0H,SAASC,eAAe,UAADjD,OAAW+C,IAC3C,OAANzH,QAAM,IAANA,KAAQ4H,UAAUC,IAAI,UACtBrB,YAAW,KACD,OAANxG,QAAM,IAANA,KAAQ4H,UAAUE,OAAO,SAAS,GACnC,KAEAL,IAAUhB,EAAUE,IACnBC,EAAeD,EAAc,GACzBA,EAAc,IAAMF,EAAUrE,SAC9BwE,EAAe,GACfM,EAASD,EAAQ,GACjBc,MAGJf,GAAa,EACjB,GACD,CAACP,EAAWE,EAAaM,EAAOc,IAE7BE,EAAQC,mBAAQ,IACfnB,EACQ,kBAGJF,EAAc,mBAAe,YACrC,CAACE,EAAWF,IAMf,OAJAsB,qBAAU,KACNJ,GAAM,GACP,CAACA,IAGA5D,eAAC/E,GAAa,CAAAqC,SAAA,CACVR,cAACiF,GAAc,CAAAzE,SACVwG,IAEL9D,eAAC8B,GAAK,CAAAxE,SAAA,CACFR,cAAC4E,GAAW,CAACzE,GAAG,WAAWqD,SAAUoC,GAAeE,EAAWvC,QAASA,IAAMwD,EAAkB,KAChG/G,cAAC6E,GAAW,CAAC1E,GAAG,WAAWqD,SAAUoC,GAAeE,EAAWvC,QAASA,IAAMwD,EAAkB,KAChG/G,cAAC8E,GAAW,CAAC3E,GAAG,WAAWqD,SAAUoC,GAAeE,EAAWvC,QAASA,IAAMwD,EAAkB,KAChG/G,cAAC+E,GAAW,CAAC5E,GAAG,WAAWqD,SAAUoC,GAAeE,EAAWvC,QAASA,IAAMwD,EAAkB,QAEpG7D,eAAC+B,GAAc,CAAAzE,SAAA,CAAC,oBACAwF,OAEJ,EClFjB,MAAMtC,GAAiBtF,IAAOC,IAAGC,QAAAC,YAAA,4HAQ3BoF,GAAYvF,IAAOmB,KAAId,QAAAF,YAAA,uECIrB4I,I,MAAAA,GATWA,IACdjE,eAAAW,WAAA,CAAArD,SAAA,CACJR,cAAC0D,GAAc,CAAAlD,SACXR,cAAC2D,GAAS,CAAAnD,SAAC,aAEfR,cAACsB,GAAI,OCRN,MAAMoC,GAAiBtF,IAAOC,IAAGC,QAAAC,YAAA,4HAQ3BoF,GAAYvF,IAAOmB,KAAId,QAAAF,YAAA,uE,sBCP7B,MAAMJ,GAAgBC,IAAOC,IAAGC,QAAAC,YAAA,+FAO1B6I,GAAoBhJ,IAAOC,IAAGI,QAAAF,YAAA,+FAO9B8I,GAAQjJ,IAAOmB,KAAIX,QAAAL,YAAA,qFAIrBU,IAAgB,IAAf,MAAEgE,GAAOhE,EACjB,OAAQgE,GACN,IAAK,MACH,MAAO,UACT,IAAK,OACH,MAAO,UACX,IAISqE,GAAMlJ,IAAOmB,KAAIP,QAAAT,YAAA,qKASjBgJ,GAAgBnJ,IAAOC,IAAGgB,QAAAd,YAAA,gGAO1BsB,GAAgBzB,IAAOW,OAAMS,QAAAjB,YAAA,oW,aC7CnC,MAAMiJ,GAAmBpJ,IAAOC,IAAGC,QAAAC,YAAA,uGAO7BkJ,GAAmBrJ,IAAOC,IAAGI,QAAAF,YAAA,iIAQpCmJ,GAAqB,OAEdC,GAAevJ,IAAOW,OAAMH,QAAAL,YAAA,iYAC5BmJ,GACCA,ICTRE,GAAiB,CACnB,CACIC,IAAK,UACLC,MAAO,CACH,WACA,OACA,OACA,QACA,WACA,SACA,WACA,YACA,YACA,aACA,SACA,OACA,OACA,SACA,UAGR,CACID,IAAK,SACLC,MAAO,CACH,SACA,UACA,UACA,UACA,WACA,QACA,QACA,UACA,MACA,aACA,OACA,UACA,OACA,SACA,UAGR,CACID,IAAK,gBACLC,MAAO,CACH,SACA,aACA,YACA,WACA,WACA,WACA,eACA,YACA,cACA,iBACA,aACA,gBACA,gBACA,WACA,aAGR,CACID,IAAK,WACLC,MAAO,CACH,UACA,WACA,QACA,QACA,aACA,UACA,SACA,WACA,YACA,YACA,OACA,SACA,OACA,UACA,aAGR,CACID,IAAK,YACLC,MAAO,CACH,SACA,iBACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,UAGR,CACID,IAAK,QACLC,MAAO,CACH,WACA,OACA,QACA,UACA,OACA,UACA,OACA,QACA,SACA,SACA,QACA,OACA,UACA,UACA,aAGR,CACID,IAAK,UACLC,MAAO,CACH,QACA,SACA,WACA,UACA,QACA,aACA,YACA,SACA,OACA,OACA,QACA,OACA,eACA,aACA,aAGR,CACID,IAAK,UACLC,MAAO,CACH,UACA,OACA,YACA,QACA,YACA,UACA,aACA,WACA,OACA,cACA,UACA,SACA,QACA,QACA,SAGR,CACID,IAAK,SACLC,MAAO,CACH,SACA,WACA,UACA,OACA,UACA,QACA,SACA,OACA,SACA,WACA,UACA,OACA,QACA,QACA,UAGR,CACID,IAAK,eACLC,MAAO,CACH,YACA,WACA,QACA,MACA,KACA,OACA,QACA,OACA,SACA,WACA,SACA,aACA,UACA,SACA,YAGR,CACID,IAAK,wBACLC,MAAO,CACH,SACA,WACA,QACA,UACA,UACA,QACA,SACA,WACA,WACA,UACA,WACA,SACA,WACA,QACA,aAGR,CACID,IAAK,sBACLC,MAAO,CACH,QACA,OACA,YACA,SACA,QACA,OACA,QACA,QACA,QACA,aACA,SACA,QACA,OACA,WACA,WAGR,CACID,IAAK,kBACLC,MAAO,CACH,UACA,OACA,YACA,QACA,YACA,UACA,aACA,WACA,OACA,cACA,UACA,SACA,QACA,QACA,SAGR,CACID,IAAK,oBACLC,MAAO,CACH,QACA,SACA,QACA,WACA,UACA,UACA,QACA,SACA,eACA,cACA,YACA,UACA,OACA,YACA,UAGR,CACID,IAAK,qBACLC,MAAO,CACH,QACA,QACA,OACA,SACA,SACA,aACA,QACA,YACA,aACA,iBACA,YACA,aACA,OACA,SACA,YClTNC,GAAgB,CAAC,GAAI,EAAG,GACxBC,GDFqC/G,MAAMC,KAC7C,CAAEC,OAAQ,KACV,CAAC8G,EAAGxF,IAAMyF,OAAOC,aAAa,GAAK1F,KCCjC2F,GAAa,UAkDJC,I,MAAAA,GA5C2BpJ,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","file":"static/js/main.31cfc4ca.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","\r\nexport enum CellState {\r\n    EMPTY=0,\r\n    CROSS=1,\r\n    CIRCLE=2,\r\n    DRAW=3,\r\n}\r\n\r\n","import styled, { keyframes, css } from 'styled-components';\r\nimport { CellState } from '../../constants';\r\n\r\nexport const GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\n\r\nexport const BoardContainer = styled.div`\r\n  display: grid;\r\n  width: fit-content;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n  background-color: #3f8fa5;\r\n`;\r\n\r\nconst cellColorAnimation = keyframes`\r\n  0%, 40%, 80% {\r\n    background-color: #61dafb;\r\n  }\r\n\r\n  20%, 60%, 100% {\r\n    background-color: #61FBCF;\r\n  }\r\n`;\r\n\r\nconst CELL_SIZE = '12vh';\r\n\r\nexport const Cell = styled.button<{winnerCell: boolean}>`\r\n  width: ${CELL_SIZE};\r\n  height: ${CELL_SIZE};\r\n  background-color: ${({ winnerCell }) => winnerCell\r\n    ? '#61FBCF'\r\n    : '#61dafb'\r\n  };\r\n\r\n  border-radius: 1rem;\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #282c34;\r\n\r\n  ${({ winnerCell }) => winnerCell && css`\r\n    animation: ${cellColorAnimation} 2s ease-in-out;\r\n  `} \r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const PlayerLabel = styled.span<{ winner: number}>`\r\n  color: ${({ winner }) => winner == CellState.CROSS\r\n    ? '#618dfb'\r\n    : winner == CellState.CIRCLE\r\n    ? '#fb8261'\r\n    : '#dafb61'\r\n  };\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const RestartButton = styled.button`\r\n  border: 0;\r\n  border-radius: 0.5rem;\r\n  background-color: #61dafb;\r\n  color: #282c34;\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  padding: 0.5rem 1rem;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\"\r\n\r\nconst CrossPlayer: React.FC = () => {\r\n  return (\r\n    <svg fill=\"current\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"90\" height=\"90\" viewBox=\"0 0 505 505\">\r\n    <g>\r\n      <g>\r\n        <path d=\"M491.613,75.643l-64.235-64.235c-15.202-15.202-39.854-15.202-55.056,0L251.507,132.222L130.686,11.407\r\n          c-15.202-15.202-39.853-15.202-55.055,0L11.401,75.643c-15.202,15.202-15.202,39.854,0,55.056l120.821,120.815L11.401,372.328\r\n          c-15.202,15.202-15.202,39.854,0,55.056l64.235,64.229c15.202,15.202,39.854,15.202,55.056,0l120.815-120.814l120.822,120.814\r\n          c15.202,15.202,39.854,15.202,55.056,0l64.235-64.229c15.202-15.202,15.202-39.854,0-55.056L370.793,251.514l120.82-120.815\r\n          C506.815,115.49,506.815,90.845,491.613,75.643z\"/>\r\n      </g>\r\n    </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CrossPlayer;\r\n","import React from \"react\"\r\n\r\nconst CirclePlayer: React.FC = () => {\r\n  return (\r\n    <svg viewBox=\"0 0 100 100\">\r\n      <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" strokeWidth=\"20\" fill=\"transparent\" /> \r\n    </svg> \r\n  );\r\n};\r\n\r\nexport default CirclePlayer;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { BoardContainer, Cell, GameContainer, PlayerLabel, RestartButton } from \"./index.styled\";\r\nimport CrossPlayer from \"../players/crossPlayer\";\r\nimport CirclePlayer from \"../players/circlePlayer\";\r\nimport { CellState } from \"../../constants\";\r\n\r\nconst GAME_SIZE = 3;\r\n\r\nconst initialBoard = Array.from(\r\n  { length: GAME_SIZE }, \r\n  () => Array.from({ length: GAME_SIZE }, () => CellState.EMPTY)\r\n);\r\n\r\nconst initialWinnerCells = Array.from(\r\n  { length: GAME_SIZE }, \r\n  () => Array.from({ length: GAME_SIZE }, () => false)\r\n);\r\n\r\nconst Game: React.FC = () => {\r\n  const [board, setBoard] = useState<CellState[][]>(initialBoard);\r\n  const [currentPlayer, setCurrentPlayer] = useState<CellState>(CellState.CROSS);\r\n  const [gameWinner, setGameWinner] = useState<CellState>(CellState.EMPTY);\r\n  const [winnerCells, setWinnerCells] = useState<boolean[][]>(initialWinnerCells);\r\n\r\n  const changePlayer = useCallback(() => {\r\n    setCurrentPlayer((player) =>\r\n      player === CellState.CROSS \r\n        ? CellState.CIRCLE \r\n        : CellState.CROSS\r\n    );\r\n  }, []);\r\n\r\n  const restartGame = useCallback(() => {\r\n    window.location.reload();\r\n  }, []);\r\n\r\n  const checkWinner = useCallback(() => {\r\n    const newWinnerCells = [...winnerCells];\r\n    // Confere as linhas\r\n    for(let i = 0; i < GAME_SIZE; i++) {\r\n      if(\r\n        board[i][0] === board[i][1] && \r\n        board[i][1] ===  board[i][2] && \r\n        board[i][0] != CellState.EMPTY\r\n      ) {\r\n        newWinnerCells[i][0] = true;\r\n        newWinnerCells[i][1] = true;\r\n        newWinnerCells[i][2] = true;\r\n        setWinnerCells(newWinnerCells);\r\n        return board[i][0];\r\n      }\r\n    }\r\n\r\n    // Confere as colunas\r\n    for(let i = 0; i < GAME_SIZE; i++) {\r\n      if(\r\n        board[0][i] === board[1][i] && \r\n        board[1][i] ===  board[2][i] &&\r\n        board[0][i] != CellState.EMPTY\r\n      ) {\r\n        newWinnerCells[0][i] = true;\r\n        newWinnerCells[1][i] = true;\r\n        newWinnerCells[2][i] = true;\r\n        setWinnerCells(newWinnerCells);\r\n        return board[0][i];\r\n      }\r\n    }\r\n\r\n    // Confere a diagonal principal\r\n    if(\r\n      board[0][0] === board[1][1] && \r\n      board[1][1] ===  board[2][2] &&\r\n      board[0][0] != CellState.EMPTY\r\n    ) {\r\n      newWinnerCells[0][0] = true;\r\n      newWinnerCells[1][1] = true;\r\n      newWinnerCells[2][2] = true;\r\n      setWinnerCells(newWinnerCells);\r\n      return board[0][0];\r\n    }\r\n\r\n    // Confere a diagonal secundária\r\n    if(\r\n      board[0][2] === board[1][1] && \r\n      board[1][1] ===  board[2][0] &&\r\n      board[0][2] != CellState.EMPTY\r\n    ) {\r\n      newWinnerCells[0][2] = true;\r\n      newWinnerCells[1][1] = true;\r\n      newWinnerCells[2][0] = true;\r\n      setWinnerCells(newWinnerCells);\r\n      return board[0][2];\r\n    }\r\n\r\n    // Confere o empate\r\n    for(let i = 0; i < GAME_SIZE; i++) {\r\n      for(let j = 0; j < GAME_SIZE; j++) {\r\n        if(board[i][j] === CellState.EMPTY){\r\n          return CellState.EMPTY;\r\n        }\r\n      }\r\n    }\r\n\r\n    return CellState.DRAW;\r\n  }, [board, winnerCells]);\r\n\r\n  const handleCellClick = useCallback((row: number, col: number) => {\r\n    const cellState = board[row][col];\r\n    if(cellState !== CellState.EMPTY || gameWinner != CellState.EMPTY) \r\n      return;\r\n\r\n    const newBoard = [...board];\r\n    newBoard[row][col] = currentPlayer;\r\n    setBoard(newBoard);\r\n\r\n    const winner = checkWinner();\r\n    if(winner !== CellState.EMPTY) {\r\n      setGameWinner(winner);\r\n    } else {\r\n      changePlayer();\r\n    }\r\n  }, [board, gameWinner, currentPlayer, checkWinner, changePlayer]);\r\n\r\n  const renderCell = useCallback((state: number) => {\r\n    switch (state) {\r\n      case CellState.EMPTY:\r\n        return null;\r\n      case CellState.CROSS:\r\n        return <CrossPlayer />;\r\n      case CellState.CIRCLE:\r\n        return <CirclePlayer />;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <GameContainer>\r\n      <PlayerLabel winner={currentPlayer}>\r\n        Vez do jogador {currentPlayer}\r\n      </PlayerLabel>\r\n      <BoardContainer>\r\n        {board.map((row, rowIndex) =>\r\n          row.map((cell, columnIndex) => (\r\n            <Cell \r\n              key={`cell-${rowIndex}-${columnIndex}`}\r\n              onClick={() => handleCellClick(rowIndex, columnIndex)}\r\n              winnerCell={winnerCells[rowIndex][columnIndex]}\r\n              disabled={cell !== CellState.EMPTY}\r\n            >\r\n              {renderCell(cell)}\r\n            </Cell>\r\n          ))\r\n        )}\r\n      </BoardContainer>\r\n      <RestartButton onClick={restartGame}>\r\n        Recomeçar\r\n      </RestartButton>\r\n      {gameWinner !== CellState.EMPTY && (\r\n        <PlayerLabel winner={gameWinner}>\r\n          {gameWinner === CellState.DRAW \r\n            ? `Empate!`\r\n            : `O jogador ${gameWinner} venceu o jogo!`\r\n          }\r\n        </PlayerLabel>\r\n      )}\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 3% 0;\r\n`;\r\n\r\nexport const GameTitle = styled.span`\r\n  color: #61dafb;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport Game from \"./components/canva\";\r\nimport { GameTitle, TitleContainer } from \"./components/index.styled\";\r\n\r\n\r\nconst TicTacToe: React.FC = () => {\r\n    return (<>\r\n        <TitleContainer>\r\n            <GameTitle>Jogo da Velha</GameTitle>\r\n        </TitleContainer>\r\n        <Game />\r\n    </>);\r\n};\r\n\r\nexport default TicTacToe;\r\n","import styled from 'styled-components';\r\n\r\nexport const RootContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  gap: 0;\r\n  background-color: #282c34;\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Courier New', Courier, monospace;\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { Route, RouteComponentProps } from \"react-router-dom\";\r\nimport { RootContainer } from \"./route-component.styled\";\r\n\r\nconst RouteComponent: React.FC<RouteComponentProps> = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <RootContainer>\r\n            <Route {...rest} render={(props) => <Component {...props} />} />\r\n        </RootContainer>\r\n    );\r\n};\r\n\r\nexport default RouteComponent;\r\n","import styled from 'styled-components';\r\n\r\nexport const PLAYER_1 = '#ff2d05';\r\nexport const PLAYER_2 = '#008aff';\r\nexport const PLAYER_3 = '#dfff1c';\r\nexport const PLAYER_4 = '#5dee2f';\r\n\r\nexport const GameContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n`;\r\n\r\nconst BUTTON_SIZE = '15vw';\r\n\r\nconst GameButton = styled.button`\r\n    width: ${BUTTON_SIZE};\r\n    height: ${BUTTON_SIZE};\r\n    border: 0;\r\n\r\n    &:not([disabled]):hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const GameButton1 = styled(GameButton)`\r\n    background-color: ${PLAYER_1};\r\n    border-top-left-radius: 100%;\r\n`;\r\n\r\nexport const GameButton2 = styled(GameButton)`\r\n    background-color: ${PLAYER_2};\r\n    border-top-right-radius: 100%;\r\n`;\r\n\r\nexport const GameButton3 = styled(GameButton)`\r\n    background-color: ${PLAYER_3};\r\n    border-bottom-left-radius: 100%;\r\n`;\r\n\r\nexport const GameButton4 = styled(GameButton)`\r\n    background-color: ${PLAYER_4};\r\n    border-bottom-right-radius: 100%;\r\n`;\r\n\r\nexport const Board = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    width: 100%;\r\n    height: 100%;\r\n    gap: 0.5rem;\r\n\r\n    ${GameButton1}.active {\r\n        box-shadow: 0 0 1rem ${PLAYER_1};\r\n        filter: brightness(1.2);\r\n    }\r\n\r\n    ${GameButton2}.active {\r\n        box-shadow: 0 0 1rem ${PLAYER_2};\r\n        filter: brightness(1.2);\r\n    }\r\n\r\n    ${GameButton3}.active {\r\n        box-shadow: 0 0 1rem ${PLAYER_3};\r\n        filter: brightness(1.2);\r\n    }\r\n\r\n    ${GameButton4}.active {\r\n        box-shadow: 0 0 1rem ${PLAYER_4};\r\n        filter: brightness(1.2);\r\n    }\r\n`;\r\n\r\nexport const GameStateLabel = styled.span`\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #ddd\r\n`;","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Board, GameButton1, GameButton2, GameButton3, GameButton4, GameContainer, GameStateLabel } from './index.styled';\r\n\r\nconst wait = (milliseconds: number) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n}\r\n\r\nconst Game: React.FC = () => {\r\n\r\n    const [realSerie, setRealSerie] = useState<number[]>([]);\r\n    const [playerIndex, setPlayerIndex] = useState<number>(0);\r\n    const [gamingState, setGamingState] = useState<boolean>(true);\r\n    const [loseState, setLoseState] = useState<boolean>(false);\r\n    const [score, setScore] = useState<number>(0);\r\n\r\n    const gamingLoading = useCallback(async () => {\r\n        const random = Math.floor(Math.random() * 4) + 1;\r\n        const series = [...realSerie, random];\r\n\r\n        for(let index = 0; index < series.length; index++) {\r\n            const button = document.getElementById(`button-${series[index]}`);\r\n            button?.classList.add('active');\r\n            setTimeout(() => {\r\n                button?.classList.remove('active');\r\n            }, 500);\r\n            await wait(1000);\r\n        }\r\n\r\n        setRealSerie(series);\r\n        setGamingState(false);\r\n    }, [realSerie]);\r\n\r\n    const play = useCallback(async () => {\r\n        if(loseState) return;\r\n        await wait(1000);\r\n        setGamingState(true);\r\n        await gamingLoading();\r\n    }, [gamingLoading, loseState]);\r\n\r\n    const handlePlayerClick = useCallback((index) => {\r\n        const button = document.getElementById(`button-${index}`);\r\n        button?.classList.add('active');\r\n        setTimeout(() => {\r\n            button?.classList.remove('active');\r\n        }, 500);\r\n\r\n        if(index === realSerie[playerIndex]) {\r\n            setPlayerIndex(playerIndex + 1);\r\n            if (playerIndex + 1 === realSerie.length) {\r\n                setPlayerIndex(0);\r\n                setScore(score + 1);\r\n                play();\r\n            }\r\n        } else {\r\n            setLoseState(true);\r\n        }\r\n    }, [realSerie, playerIndex, score, play]);\r\n\r\n    const label = useMemo(() => {\r\n        if(loseState) {\r\n            return 'Você perdeu!';\r\n        }\r\n\r\n        return gamingState ? 'Atenção...' : 'Sua vez!';\r\n    }, [loseState, gamingState]);\r\n\r\n    useEffect(() => {\r\n        play();\r\n    }, [play]);\r\n    \r\n    return (\r\n        <GameContainer>\r\n            <GameStateLabel>\r\n                {label}\r\n            </GameStateLabel>\r\n            <Board>\r\n                <GameButton1 id=\"button-1\" disabled={gamingState || loseState} onClick={() => handlePlayerClick(1)} />\r\n                <GameButton2 id=\"button-2\" disabled={gamingState || loseState} onClick={() => handlePlayerClick(2)}/>\r\n                <GameButton3 id=\"button-3\" disabled={gamingState || loseState} onClick={() => handlePlayerClick(3)}/>\r\n                <GameButton4 id=\"button-4\" disabled={gamingState || loseState} onClick={() => handlePlayerClick(4)}/>\r\n            </Board>\r\n            <GameStateLabel>\r\n                Pontuação: {score}\r\n            </GameStateLabel>\r\n        </GameContainer>\r\n    )\r\n};\r\n\r\nexport default Game;\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 3% 0;\r\n`;\r\n\r\nexport const GameTitle = styled.span`\r\n  color: #61dafb;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport Game from \"./components/canva\";\r\nimport { GameTitle, TitleContainer } from \"./components/index.styled\";\r\n\r\n\r\nconst Genesis: React.FC = () => {\r\n    return (<>\r\n        <TitleContainer>\r\n            <GameTitle>Genius</GameTitle>\r\n        </TitleContainer>\r\n        <Game />\r\n    </>)\r\n};\r\n\r\nexport default Genesis;\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 3% 0;\r\n`;\r\n\r\nexport const GameTitle = styled.span`\r\n  color: #61dafb;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\nimport { GameState } from '../constants';\r\n\r\nexport const GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2.5rem;\r\n`;\r\n\r\nexport const GameInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nexport const State = styled.span<{ state: GameState }>`\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: ${({ state }) => {\r\n    switch (state) {\r\n      case 'win':\r\n        return '#00ff00';\r\n      case 'lose':\r\n        return '#ff0000';\r\n    }\r\n  }};\r\n`;\r\n\r\nexport const Tip = styled.span`\r\n    background-color: #61dafb;\r\n    color: #000;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 1rem;\r\n`;\r\n\r\nexport const WordContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  gap: 4rem;\r\n`;\r\n\r\nexport const RestartButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid #61dafb;\r\n  border-radius: 1rem;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: transparent;\r\n  color: #61dafb;\r\n  margin-top: 2rem;\r\n\r\n  &:hover {\r\n    background-color: #61dafb33;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const KeyboadContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n`;\r\n\r\nexport const LettersContainer = styled.div`\r\n    width: fit-content;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n`;\r\n\r\nconst LETTER_BUTTON_SIZE = '3rem';\r\n\r\nexport const LetterButton = styled.button`\r\n    width: ${LETTER_BUTTON_SIZE};\r\n    height: ${LETTER_BUTTON_SIZE};\r\n    border: 0;\r\n    border-radius: 0.5rem;\r\n    background-color: #61dafb;\r\n    color: #282c34;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    transition: opacity 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: 0.8;\r\n    }\r\n\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n","\r\nexport type GameState = 'playing' | 'win' | 'lose';\r\n\r\nexport const getAlphabet = (): string[] => Array.from(\r\n    { length: 26 }, \r\n    (_, i) => String.fromCharCode(65 + i)\r\n);\r\n\r\nexport interface IWord {\r\n    tip: string;\r\n    words: string[];\r\n}\r\nconst WORDS: IWord[] = [\r\n    {\r\n        tip: 'Animais',\r\n        words: [\r\n            'CACHORRO',\r\n            'GATO',\r\n            'LEAO',\r\n            'TIGRE',\r\n            'ELEFANTE',\r\n            'GIRAFA',\r\n            'GOLFINHO',\r\n            'TARTARUGA',\r\n            'CROCODILO',\r\n            'HIPOPOTAMO',\r\n            'MACACO',\r\n            'URSO',\r\n            'RATO',\r\n            'COELHO',\r\n            'PORCO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Frutas',\r\n        words: [\r\n            'BANANA',\r\n            'MAÇA',\r\n            'MORANGO',\r\n            'LARANJA',\r\n            'MELANCIA',\r\n            'MELAO',\r\n            'MANGA',\r\n            'ABACAXI',\r\n            'UVA',\r\n            'JABUTICABA',\r\n            'CAJU',\r\n            'ACEROLA',\r\n            'COCO',\r\n            'GOIABA',\r\n            'LIMAO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Profissões',\r\n        words: [\r\n            'MEDICO',\r\n            'ENGENHEIRO',\r\n            'PROFESSOR',\r\n            'ADVOGADO',\r\n            'DENTISTA',\r\n            'CONTADOR',\r\n            'FARMACEUTICO',\r\n            'PSICOLOGO',\r\n            'VETERINARIO',\r\n            'FISIOTERAPEUTA',\r\n            'ENFERMEIRO',\r\n            'NUTRICIONISTA',\r\n            'ADMINISTRADOR',\r\n            'BOMBEIRO',\r\n            'POLICIAL',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Esportes',\r\n        words: [\r\n            'FUTEBOL',\r\n            'BASQUETE',\r\n            'VOLEI',\r\n            'TENIS',\r\n            'NATAÇAO',\r\n            'CORRIDA',\r\n            'FUTSAL',\r\n            'HANDEBOL',\r\n            'ATLETISMO',\r\n            'GINASTICA',\r\n            'JUDO',\r\n            'KARATE',\r\n            'BOXE',\r\n            'ESGRIMA',\r\n            'CICLISMO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Países',\r\n        words: [\r\n            'BRASIL',\r\n            'ESTADOS UNIDOS',\r\n            'CHINA',\r\n            'JAPAO',\r\n            'RUSSIA',\r\n            'CANADA',\r\n            'MEXICO',\r\n            'ESPANHA',\r\n            'FRANÇA',\r\n            'ALEMANHA',\r\n            'ITALIA',\r\n            'ARGENTINA',\r\n            'AUSTRALIA',\r\n            'PORTUGAL',\r\n            'INDIA',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Cores',\r\n        words: [\r\n            'VERMELHO',\r\n            'AZUL',\r\n            'VERDE',\r\n            'AMARELO',\r\n            'ROXO',\r\n            'LARANJA',\r\n            'ROSA',\r\n            'PRETO',\r\n            'BRANCO',\r\n            'MARROM',\r\n            'CINZA',\r\n            'BEGE',\r\n            'VIOLETA',\r\n            'DOURADO',\r\n            'PRATEADO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Comidas',\r\n        words: [\r\n            'ARROZ',\r\n            'FEIJAO',\r\n            'MACARRAO',\r\n            'LASANHA',\r\n            'PIZZA',\r\n            'HAMBURGUER',\r\n            'SANDUICHE',\r\n            'SALADA',\r\n            'SOPA',\r\n            'BOLO',\r\n            'PUDIM',\r\n            'SUCO',\r\n            'REFRIGERANTE',\r\n            'SALGADINHO',\r\n            'BISCOITO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Objetos',\r\n        words: [\r\n            'CADEIRA',\r\n            'MESA',\r\n            'GELADEIRA',\r\n            'FOGAO',\r\n            'TELEVISAO',\r\n            'CELULAR',\r\n            'COMPUTADOR',\r\n            'NOTEBOOK',\r\n            'CAMA',\r\n            'TRAVESSEIRO',\r\n            'CORTINA',\r\n            'JANELA',\r\n            'PORTA',\r\n            'CARRO',\r\n            'MOTO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Roupas',\r\n        words: [\r\n            'CAMISA',\r\n            'CALÇA',\r\n            'BERMUDA',\r\n            'SAIA',\r\n            'VESTIDO',\r\n            'BLUSA',\r\n            'SHORTS',\r\n            'MEIA',\r\n            'SAPATO',\r\n            'SANDALIA',\r\n            'CHINELO',\r\n            'BONE',\r\n            'TOUCA',\r\n            'CUECA',\r\n            'SUTIA',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Corpo Humano',\r\n        words: [\r\n            'CABEÇA',\r\n            'BRAÇO',\r\n            'PERNA',\r\n            'MAO',\r\n            'PE',\r\n            'OLHO',\r\n            'NARIZ',\r\n            'BOCA',\r\n            'ORELHA',\r\n            'COTOVELO',\r\n            'JOELHO',\r\n            'PESCOÇO',\r\n            'BARRIGA',\r\n            'COSTAS',\r\n            'CINTURA',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Instrumentos Musicais',\r\n        words: [\r\n            'VIOLAO',\r\n            'GUITARRA',\r\n            'BAIXO',\r\n            'BATERIA',\r\n            'TECLADO',\r\n            'PIANO',\r\n            'FLAUTA',\r\n            'TROMPETE',\r\n            'SAXOFONE',\r\n            'VIOLINO',\r\n            'ACORDEON',\r\n            'TAMBOR',\r\n            'TAMBORIM',\r\n            'CUICA',\r\n            'PANDEIRO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Meios de Transporte',\r\n        words: [\r\n            'CARRO',\r\n            'MOTO',\r\n            'BICICLETA',\r\n            'ONIBUS',\r\n            'METRO',\r\n            'TREM',\r\n            'AVIAO',\r\n            'NAVIO',\r\n            'BARCO',\r\n            'CARROÇA',\r\n            'CAVALO',\r\n            'JEGUE',\r\n            'BODE',\r\n            'CAMINHAO',\r\n            'TRATOR',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Objetos de Casa',\r\n        words: [\r\n            'CADEIRA',\r\n            'MESA',\r\n            'GELADEIRA',\r\n            'FOGAO',\r\n            'TELEVISAO',\r\n            'CELULAR',\r\n            'COMPUTADOR',\r\n            'NOTEBOOK',\r\n            'CAMA',\r\n            'TRAVESSEIRO',\r\n            'CORTINA',\r\n            'JANELA',\r\n            'PORTA',\r\n            'CARRO',\r\n            'MOTO',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Objetos de Escola',\r\n        words: [\r\n            'LIVRO',\r\n            'CANETA',\r\n            'LAPIS',\r\n            'BORRACHA',\r\n            'CADERNO',\r\n            'MOCHILA',\r\n            'REGUA',\r\n            'ESTOJO',\r\n            'LAPIS DE COR',\r\n            'GIZ DE CERA',\r\n            'APONTADOR',\r\n            'TESOURA',\r\n            'COLA',\r\n            'CARTOLINA',\r\n            'PAPEL',\r\n        ]\r\n    },\r\n    {\r\n        tip: 'Objetos de Cozinha',\r\n        words: [\r\n            'PRATO',\r\n            'GARFO',\r\n            'FACA',\r\n            'COLHER',\r\n            'PANELA',\r\n            'FRIGIDEIRA',\r\n            'FOGAO',\r\n            'GELADEIRA',\r\n            'MICROONDAS',\r\n            'LIQUIDIFICADOR',\r\n            'BATEDEIRA',\r\n            'ESCORREDOR',\r\n            'COPO',\r\n            'XICARA',\r\n            'COADOR',\r\n        ]\r\n    },\r\n];\r\n\r\nexport const getRandTipWord = (): { tip: string, word: string} => {\r\n    const randIndex = Math.floor(Math.random() * WORDS.length);\r\n    const randWord = Math.floor(Math.random() * WORDS[randIndex].words.length);\r\n\r\n    const obj = WORDS[randIndex];\r\n    const tip = obj.tip;\r\n    const word = obj.words[randWord];\r\n\r\n    return { tip, word };\r\n};\r\n","import React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { KeyboadContainer, LetterButton, LettersContainer } from \"./index.styled\";\r\nimport { getAlphabet } from \"../constants\";\r\n\r\nconst LETTERS_COUNT = [10, 9, 7];\r\nconst ALPHABET = getAlphabet();\r\nconst EVENT_TYPE = 'keydown';\r\n\r\ninterface KeyboardProps {\r\n    selectedLetters: string[];\r\n    onClick: (letter: string) => void;\r\n}\r\nconst Keyboard: React.FC<KeyboardProps> = ({ onClick, selectedLetters }) => {\r\n\r\n    const handleKeyPressed = useCallback((event) => {\r\n        onClick(String.fromCharCode(event.keyCode));\r\n    }, [onClick]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(EVENT_TYPE, handleKeyPressed, false);\r\n        return () => {\r\n            document.removeEventListener(EVENT_TYPE, handleKeyPressed, false);\r\n        };\r\n    }, [handleKeyPressed]);\r\n\r\n    const letterRows = useMemo(() => {\r\n        return [\r\n            ALPHABET.slice(0, LETTERS_COUNT[0]),\r\n            ALPHABET.slice(LETTERS_COUNT[0], LETTERS_COUNT[0] + LETTERS_COUNT[1]),\r\n            ALPHABET.slice(LETTERS_COUNT[0] + LETTERS_COUNT[1], LETTERS_COUNT[0] + LETTERS_COUNT[1] + LETTERS_COUNT[2])\r\n        ]\r\n    }, []);\r\n\r\n    const isSelected = useCallback((letter: string) => {\r\n        return selectedLetters.includes(letter);\r\n    }, [selectedLetters]);\r\n\r\n    return (\r\n        <KeyboadContainer>\r\n            {letterRows.map((letters, index) => (\r\n                <LettersContainer key={`letter-row-${index}`}>\r\n                    {letters.map((letter) => (\r\n                        <LetterButton \r\n                            key={`letter-btn-${letter}`} \r\n                            onClick={() => onClick(letter)}\r\n                            disabled={isSelected(letter)}\r\n                        >\r\n                            {letter}\r\n                        </LetterButton>\r\n                    ))}\r\n                </LettersContainer>\r\n            ))}\r\n        </KeyboadContainer>\r\n    )\r\n};\r\n\r\nexport default Keyboard;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const WordContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n`;\r\n\r\nconst WORD_LETTER_SIZE = '3rem';\r\n\r\nexport const WordLetter = styled.span<{ include: boolean }>`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: ${({ include }) => include ? '#61dafb' : '#fa0'};\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    width: ${WORD_LETTER_SIZE};\r\n    height: ${WORD_LETTER_SIZE};\r\n\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0rem;\r\n        left: 0;\r\n        width: ${WORD_LETTER_SIZE};\r\n        height: 0.2rem;\r\n        border-radius: 0.5rem;\r\n        background-color: #61dafb;\r\n        transition: transform 0.3s ease-in-out;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { WordContainer, WordLetter } from \"./index.styled\";\r\n\r\ninterface WordProps {\r\n    word: (string | boolean)[][];\r\n}\r\nconst Word: React.FC<WordProps> = ({ word }) => {\r\n    return (\r\n        <WordContainer>\r\n            {word.map((letter, index) => (\r\n                <WordLetter include={letter[0]} key={`letter-${index}`}>\r\n                    {letter[1]}\r\n                </WordLetter>\r\n            ))}\r\n        </WordContainer>\r\n    )\r\n};\r\n\r\nexport default Word;\r\n","import styled from 'styled-components';\r\n\r\nconst MAN_COLOR = '#61dafb';\r\nconst MAN_THICKNESS = '0.2rem';\r\n\r\nexport const BodyPart = styled.div<{ show: boolean }>`\r\n    opacity: ${({ show }) => show ? 1 : 0};\r\n    position: absolute;\r\n    transition: opacity 0.3s ease-in-out;\r\n    border-radius: 0.5rem;\r\n`;\r\n\r\nexport const ManContainer = styled.div`\r\n    position: relative;\r\n    height: 16rem;\r\n    width: 10rem;\r\n    border-left: ${MAN_THICKNESS} solid ${MAN_COLOR};\r\n\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        height: ${MAN_THICKNESS};\r\n        width: 5rem;\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    &::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 5rem;\r\n        width: ${MAN_THICKNESS};\r\n        height: 1.5rem;\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.head {\r\n        top: 2rem;\r\n        left: 0;\r\n        right: 0;\r\n        margin: 0 auto;\r\n        width: 4rem;\r\n        height: 4rem;\r\n        border-radius: 50%;\r\n        border: ${MAN_THICKNESS} solid ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.body {\r\n        top: 6rem;\r\n        left: 0.125rem;\r\n        right: 0;\r\n        margin: 0 auto;\r\n        width: ${MAN_THICKNESS};\r\n        height: 7rem;\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.left-arm {\r\n        top: 10rem;\r\n        left: 0;\r\n        right: 0;\r\n        height: ${MAN_THICKNESS};\r\n        width: 4rem;\r\n        transform: rotate(-40deg) translateX(50%);\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.right-arm {\r\n        top: 5rem;\r\n        left: 0;\r\n        right: 0;\r\n        height: ${MAN_THICKNESS};\r\n        width: 4rem;\r\n        transform: rotate(40deg) translateX(150%);\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.left-leg {\r\n        top: 15.4rem;\r\n        left: 0;\r\n        right: 0;\r\n        height: ${MAN_THICKNESS};\r\n        width: 4rem;\r\n        transform: rotate(-40deg) translateX(50%);\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n\r\n    ${BodyPart}.right-leg {\r\n        top: 10.4rem;\r\n        left: 0;\r\n        right: 0;\r\n        height: ${MAN_THICKNESS};\r\n        width: 4rem;\r\n        transform: rotate(40deg) translateX(150%);\r\n        background-color: ${MAN_COLOR};\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { BodyPart, ManContainer } from \"./index.styled\";\r\n\r\ninterface ManProps {\r\n    errors: number;\r\n}\r\nconst Man: React.FC<ManProps> = ({ errors }) => {\r\n    return (\r\n        <ManContainer>\r\n            <BodyPart show={errors >= 1} className=\"head\" />\r\n            <BodyPart show={errors >= 2} className=\"body\" />\r\n            <BodyPart show={errors >= 3} className=\"left-arm\" />\r\n            <BodyPart show={errors >= 4} className=\"right-arm\" />\r\n            <BodyPart show={errors >= 5} className=\"left-leg\" />\r\n            <BodyPart show={errors >= 6} className=\"right-leg\" />\r\n        </ManContainer>\r\n    );\r\n};\r\n\r\nexport default Man;\r\n    ","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { GameContainer, GameInfoContainer, RestartButton, State, Tip, WordContainer } from \"./index.styled\";\r\nimport Keyboard from \"../keyboard\";\r\nimport Word from \"../word\";\r\nimport { GameState, getRandTipWord } from \"../constants\";\r\nimport Man from \"../man\";\r\n\r\n\r\nconst Game: React.FC = () => {\r\n    const [errors, setErrors] = useState<number>(0);\r\n    const [selectedLetters, setSelectedLetters] = useState<string[]>([]);\r\n    const [gameState, setGameState] = useState<GameState>('playing');\r\n\r\n    const playing = useMemo((): boolean => {\r\n        return gameState === 'playing';\r\n    }, [gameState]);\r\n\r\n    const [selectedTip, selectedWord] = useMemo(() => {\r\n        const obj = getRandTipWord(); \r\n        return [obj.tip, obj.word];\r\n    }, []);\r\n\r\n    const showWord = useMemo(() => {\r\n        return selectedWord.split('').map((letter) => {\r\n            const include = selectedLetters.includes(letter);\r\n            return [include, (include || !playing) ? letter : ' '];\r\n        });\r\n    }, [selectedWord, selectedLetters, playing]);\r\n\r\n    const handleLetterClick = useCallback((letter: string) => {\r\n        if (!playing) return;\r\n        if (!selectedWord.includes(letter)){\r\n            setErrors(errors + 1);\r\n        }\r\n        setSelectedLetters([...selectedLetters, letter]);\r\n    }, [selectedLetters, selectedWord, errors, playing]);\r\n\r\n    const handleRestartGame = useCallback(() => {\r\n        location.reload();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (errors >= 6) {\r\n            setGameState('lose');\r\n        }\r\n    }, [errors]);\r\n\r\n    useEffect(() => {\r\n        if (selectedWord.split('').every((letter) => selectedLetters.includes(letter))) {\r\n            setGameState('win');\r\n        }\r\n    }, [selectedWord, selectedLetters]);\r\n\r\n    const stateLabel = useMemo(() => {\r\n        if (gameState === 'lose') return 'Você perdeu!';\r\n        if (gameState === 'win') return 'Você ganhou!';\r\n        return 'Jogando';\r\n    }, [gameState]);\r\n\r\n    return (\r\n        <GameContainer>\r\n            <GameInfoContainer>\r\n                {gameState !== 'playing' && (\r\n                    <State state={gameState}>{stateLabel}</State>\r\n                )}\r\n                <Tip>Dica: {selectedTip} ({selectedWord.length})</Tip>\r\n            </GameInfoContainer>\r\n            <WordContainer>\r\n                <Man errors={errors} />\r\n                <Word word={showWord}/>\r\n            </WordContainer>\r\n            {playing ? (\r\n                <Keyboard \r\n                    selectedLetters={selectedLetters} \r\n                    onClick={handleLetterClick}\r\n                />\r\n            ) : (\r\n                <RestartButton onClick={handleRestartGame}>\r\n                    Restart\r\n                </RestartButton>\r\n            )}\r\n        </GameContainer>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport { GameTitle, TitleContainer } from \"./components/index.styled\";\r\nimport Game from \"./components/canva\";\r\n\r\n\r\nconst Hangman: React.FC = () => {\r\n    return (<>\r\n        <TitleContainer>\r\n            <GameTitle>Jogo da Forca</GameTitle>\r\n        </TitleContainer>\r\n        <Game />\r\n    </>);\r\n};\r\n\r\nexport default Hangman;\r\n","import React from 'react';\r\n\r\n\r\nconst Home: React.FC = () => {\r\n    return (<>\r\n        <h1>Home</h1>\r\n\r\n        <p>\r\n            <a href=\"/simple-web-games/tic-tac-toe\">Tic Tac Toe</a>\r\n        </p>\r\n\r\n        <p>\r\n            <a href=\"/simple-web-games/genesis\">Genesis</a>\r\n        </p>\r\n\r\n        <p>\r\n            <a href=\"/simple-web-games/hangman\">Hangman</a>\r\n        </p>\r\n\r\n    </>);\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport historyProvider from \"./history\";\r\nimport TicTacToe from \"src/pages/tic-tac-toe\";\r\nimport RouteComponent from \"./route-component\";\r\nimport Genesis from \"src/pages/genesis\";\r\nimport Hangman from \"src/pages/hangman\";\r\nimport Home from \"src/pages/home\";\r\n\r\n\r\nconst ApplicationRoutes: React.FC = () => {\r\n    return (\r\n        <BrowserRouter history={historyProvider} basename=\"/simple-web-games\">\r\n            <Switch>\r\n                <RouteComponent path=\"/\" component={Home} exact />\r\n                <RouteComponent path=\"/tic-tac-toe\" component={TicTacToe} />\r\n                <RouteComponent path=\"/genesis\" component={Genesis} />\r\n                <RouteComponent path=\"/hangman\" component={Hangman} />\r\n                {/* <RouteComponent path=\"*\" exact>\r\n                    <Redirect to=\"/\" exact />\r\n                </RouteComponent> */}\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default ApplicationRoutes;\r\n","import React from \"react\";\r\nimport ApplicationRoutes from \"./routes/application-routes\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ApplicationRoutes />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst APP = (\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(APP, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}